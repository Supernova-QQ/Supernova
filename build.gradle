plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.hanshin'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// spring
//	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'


	// lombok
	compileOnly 'org.projectlombok:lombok'

	// openai
	implementation("com.theokanning.openai-gpt3-java:api:0.12.0")
	implementation("com.theokanning.openai-gpt3-java:service:0.12.0")

	// rate-limiter
	implementation 'com.bucket4j:bucket4j-redis:8.7.0'
	implementation 'io.lettuce:lettuce-core:6.3.2.RELEASE'

    // redis
    implementation("org.springframework.boot:spring-boot-starter-data-redis:2.7.7")

	//embedded-redis
//	implementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.1'
	implementation 'com.github.codemonstur:embedded-redis:1.4.3'

	// s3
	implementation("io.awspring.cloud:spring-cloud-aws-s3:3.0.2")
	implementation platform('software.amazon.awssdk:bom:2.21.0')
	implementation("software.amazon.awssdk:auth")

	// json
	implementation group: 'org.json', name: 'json', version: '20090211'
	implementation 'com.googlecode.json-simple:json-simple:1.1'

	// swagger
	implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0')

	// thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// database
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'


}

compileJava {
	options.compilerArgs += ['-parameters']
}

tasks.named('test') {
	useJUnitPlatform()
}